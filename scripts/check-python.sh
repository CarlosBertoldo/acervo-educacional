#!/bin/bash

# Script de Verifica√ß√£o de Ambiente Python
# Detecta qual comando Python est√° dispon√≠vel e fornece instru√ß√µes

echo "üêç === VERIFICA√á√ÉO DE AMBIENTE PYTHON ==="
echo ""

# Vari√°veis para controle
PYTHON_CMD=""
PYTHON_VERSION=""
SYSTEM_OS=""

# Detectar sistema operacional
if [[ "$OSTYPE" == "msys" ]] || [[ "$OSTYPE" == "cygwin" ]] || [[ "$OS" == "Windows_NT" ]]; then
    SYSTEM_OS="Windows"
elif [[ "$OSTYPE" == "darwin"* ]]; then
    SYSTEM_OS="macOS"
else
    SYSTEM_OS="Linux"
fi

echo "üñ•Ô∏è  Sistema Operacional: $SYSTEM_OS"
echo ""

# Fun√ß√£o para testar comando Python
test_python_command() {
    local cmd=$1
    if command -v "$cmd" &> /dev/null; then
        local version=$($cmd --version 2>&1)
        echo "‚úÖ $cmd: $version"
        if [[ -z "$PYTHON_CMD" ]]; then
            PYTHON_CMD=$cmd
            PYTHON_VERSION=$version
        fi
        return 0
    else
        echo "‚ùå $cmd: n√£o encontrado"
        return 1
    fi
}

# Testar diferentes comandos Python
echo "üîç Testando comandos Python dispon√≠veis:"
test_python_command "python3"
test_python_command "python"
test_python_command "py"

echo ""

# Verificar se algum Python foi encontrado
if [[ -z "$PYTHON_CMD" ]]; then
    echo "üö® ERRO: Nenhuma vers√£o do Python encontrada!"
    echo ""
    echo "üì• SOLU√á√ïES POR SISTEMA:"
    echo ""
    
    if [[ "$SYSTEM_OS" == "Windows" ]]; then
        echo "ü™ü Windows:"
        echo "1. Baixar Python do site oficial: https://python.org/downloads"
        echo "2. Durante instala√ß√£o, marcar 'Add Python to PATH'"
        echo "3. Ou instalar via Microsoft Store"
        echo "4. Reiniciar terminal ap√≥s instala√ß√£o"
    
    elif [[ "$SYSTEM_OS" == "macOS" ]]; then
        echo "üçé macOS:"
        echo "1. Instalar Homebrew: /bin/bash -c \"\$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\""
        echo "2. Instalar Python: brew install python3"
        echo "3. Ou baixar do site oficial: https://python.org/downloads"
    
    else
        echo "üêß Linux:"
        echo "Ubuntu/Debian: sudo apt update && sudo apt install python3 python3-pip"
        echo "CentOS/RHEL: sudo yum install python3 python3-pip"
        echo "Arch Linux: sudo pacman -S python python-pip"
        echo "Fedora: sudo dnf install python3 python3-pip"
    fi
    
    echo ""
    echo "‚ùå N√£o √© poss√≠vel continuar sem Python instalado."
    exit 1
fi

# Python encontrado - mostrar informa√ß√µes
echo "üéâ Python encontrado!"
echo "üìç Comando recomendado: $PYTHON_CMD"
echo "üìä Vers√£o: $PYTHON_VERSION"
echo ""

# Verificar se √© Python 3
if [[ "$PYTHON_VERSION" == *"Python 2"* ]]; then
    echo "‚ö†Ô∏è  AVISO: Python 2 detectado!"
    echo "üö® Este projeto requer Python 3.8 ou superior."
    echo ""
    
    if [[ "$SYSTEM_OS" == "Windows" ]]; then
        echo "üí° Tente usar: py -3 server.py"
    else
        echo "üí° Instale Python 3 e tente novamente."
    fi
    echo ""
fi

# Testar pip
echo "üîç Verificando pip:"
PIP_CMD=""

if command -v pip3 &> /dev/null; then
    echo "‚úÖ pip3: $(pip3 --version)"
    PIP_CMD="pip3"
elif command -v pip &> /dev/null; then
    echo "‚úÖ pip: $(pip --version)"
    PIP_CMD="pip"
else
    echo "‚ùå pip: n√£o encontrado"
    echo "‚ö†Ô∏è  pip √© necess√°rio para instalar depend√™ncias Python"
fi

echo ""

# Gerar instru√ß√µes espec√≠ficas
echo "üìã === INSTRU√á√ïES PARA ESTE SISTEMA ==="
echo ""

echo "üöÄ Para executar o backend:"
if [[ "$PYTHON_CMD" == "python3" ]]; then
    echo "   cd backend-mock"
    echo "   $PIP_CMD install -r requirements.txt"
    echo "   $PYTHON_CMD server.py"
elif [[ "$PYTHON_CMD" == "python" ]]; then
    echo "   cd backend-mock"
    echo "   $PIP_CMD install -r requirements.txt"
    echo "   $PYTHON_CMD server.py"
elif [[ "$PYTHON_CMD" == "py" ]]; then
    echo "   cd backend-mock"
    echo "   $PIP_CMD install -r requirements.txt"
    echo "   $PYTHON_CMD server.py"
fi

echo ""

# Verificar se python3 n√£o existe mas python sim
if ! command -v python3 &> /dev/null && command -v python &> /dev/null; then
    echo "üí° === SOLU√á√ÉO PARA python3 N√ÉO ENCONTRADO ==="
    echo ""
    
    if [[ "$SYSTEM_OS" == "Windows" ]]; then
        echo "ü™ü Windows - Op√ß√µes:"
        echo "1. Criar c√≥pia do execut√°vel:"
        echo "   where python"
        echo "   copy \"[caminho_do_python]\\python.exe\" \"[caminho_do_python]\\python3.exe\""
        echo ""
        echo "2. Usar py launcher:"
        echo "   py -3 server.py"
        echo ""
        echo "3. Criar alias no PowerShell:"
        echo "   Set-Alias python3 python"
    
    elif [[ "$SYSTEM_OS" == "macOS" ]]; then
        echo "üçé macOS - Criar alias:"
        echo "   echo 'alias python3=\"python\"' >> ~/.zshrc"
        echo "   source ~/.zshrc"
        echo ""
        echo "Ou instalar Python 3 via Homebrew:"
        echo "   brew install python3"
    
    else
        echo "üêß Linux - Criar symlink:"
        echo "   sudo ln -sf \$(which python) /usr/local/bin/python3"
        echo ""
        echo "Ou instalar python3:"
        echo "   sudo apt install python3  # Ubuntu/Debian"
        echo "   sudo yum install python3  # CentOS/RHEL"
    fi
    
    echo ""
fi

echo "‚úÖ Verifica√ß√£o conclu√≠da!"
echo "üìñ Para mais ajuda, consulte SETUP-LOCAL-CORRIGIDO.md"

